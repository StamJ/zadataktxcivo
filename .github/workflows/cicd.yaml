name: CICD

on:
  workflow_dispatch:
  push:
    branches: 
      - main 
    paths-ignore: #this will ignore next paths NOT include them
      - "**.md"
      - "images-for-README/**"

jobs: #this will check for specific changes and fire up CI or CD
  changes:
    runs-on: ubuntu-latest
    outputs:
      build-docker-image: ${{ steps.filter.outputs.ci }}
      deploy-through-pulumi: ${{ steps.filter.outputs.cd }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          ci:
            - './app/**'
            - './.github/**'
          cd:
            - './infra/**'
            - './.github/workflows/**'

  build-docker-image:
    needs: [changes]
    if: | 
      needs.changes.outputs.build-docker-image == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./app
          file: app/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/zadatak:latest

  deploy-through-pulumi:
    needs: [ changes, build-docker-image ]
    if: |
      needs.changes.outputs.deploy-through-pulumi == 'true' &&
      always() &&
      !contains(needs.build-docker-image.result, 'failure') &&
      !contains(needs.build-docker-image.result, 'cancelled')
    # ^ this condition will assure that this job will be always executed
    # AFTER the build-docker-image job that was not in failure or cancelled state
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install npm
        working-directory: ./infra/
        run: npm install
      
      - name: Run pulumi PREVIEW
        uses: pulumi/actions@v3  
        with:
          command: preview
          stack-name: StamJ/civo/live
          work-dir: ./infra/
        env:
          CIVO_TOKEN: ${{ secrets.CIVO_TOKEN }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
     

      - name: Run pulumi UP/Destroy
        uses: pulumi/actions@v3
        with:
          command: up
          stack-name: StamJ/civo/live
          work-dir: ./infra/
        env:
          CIVO_TOKEN: ${{ secrets.CIVO_TOKEN }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  